import os
import sys
from dotenv import load_dotenv
from agent_concierge import create_concierge_agent

def main():
    """
    Fun√ß√£o principal para simular a intera√ß√£o com o Agente Concierge.
    """
    # Carrega vari√°veis de ambiente do arquivo .env
    load_dotenv()

    # Verifica se a chave de API do Google est√° configurada
    if not os.getenv("GOOGLE_API_KEY"):
        print("Erro: A vari√°vel de ambiente GOOGLE_API_KEY n√£o est√° definida.")
        print("Por favor, crie um arquivo .env e adicione a linha: GOOGLE_API_KEY='sua_chave_aqui'")
        sys.exit(1)

    # ID do usu√°rio para a simula√ß√£o
    user_id_sim = "user_maria_123"

    print("="*50)
    print(f"üöÄ Iniciando Simula√ß√£o com o Agente Concierge para o usu√°rio: {user_id_sim}")
    print("="*50)

    # Cria uma inst√¢ncia do agente para o usu√°rio espec√≠fico
    concierge = create_concierge_agent(user_id=user_id_sim)

    # --- Simula√ß√£o de Conversa ---

    # 1. O agente come√ßa a conversa de forma proativa
    print("\n--- In√≠cio da Conversa ---")
    initial_response = concierge.run("Ol√°")
    print(f"ü§ñ Concierge: {initial_response}")
    print("(Digite 'sair' para encerrar a conversa)")

    # 2. Loop para conversa cont√≠nua
    while True:
        user_query = input("üë§ Usu√°rio: ")
        if user_query.lower() in ["sair", "exit", "quit"]:
            print("ü§ñ Concierge: At√© logo! Fico √† disposi√ß√£o se precisar de algo mais.")
            break
        response = concierge.run(user_query)
        print(f"ü§ñ Concierge: {response}")

if __name__ == "__main__":
    main()